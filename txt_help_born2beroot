				  correction born 2 be root 
					Introduction :
Merci de respecter les règles suivantes :


					Guidelines
- Ne notez que ce qui est contenu dans le dépôt Git cloné de l'étudiant ou du groupe.

- Vérifiez que le dépôt Git appartient bien à l'étudiant(e) ou au groupe,
que le projet est bien celui attendu, et que "git clone" est utilisé
dans un dossier vide.

- Vérifiez scrupuleusement qu'aucun alias n'a été utilisé pour vous tromper
et assurez-vous que vous évaluez bien le rendu officiel.

- Afin d'éviter toute surprise, vérifiez avec l'étudiant(e) ou le groupe les
potentiels scripts utilisés pour faciliter l'évaluation (par exemple, des
scripts de tests ou d'automatisation).

- Si vous n'avez pas fait le projet que vous allez évaluer, vous devez lire
le sujet en entier avant de commencer l'évaluation.

- Utilisez les flags disponibles pour signaler un rendu vide, un programme
ne fonctionnant pas, une erreur de Norme, de la triche... Dans ces
situations, l'évaluation est terminée et la note est 0, ou -42 en cas de
triche. Cependant, à l'exception des cas de triche, vous êtes encouragé(e)s
à continuer la discussion sur le travail rendu, même si ce dernier est
incomplet. Ceci afin d'identifier les erreurs à ne pas reproduire dans le
futur.

					Préliminaires
Tests préliminaires
Vérifiez les points suivants :

Les conditions d'accès à la soutenance sont respectées : personne(s) évaluée(s) présente(s), un rendu non vide lui appartenant bien, etc...
Pour ce projet, vous devez cloner le dépôt Git sur l'ordinateur de la personne évaluée.

		Consignes générales
Durant la soutenance, dès que vous avez besoin d'aide pour vérifier un point, la personne évaluée doit vous aider.
Vérifiez que le fichier "signature.txt" est bien présent à la racine du dépôt cloné.
Vérifiez que la signature contenue dans "signature.txt" est identique à celle du fichier ".vdi" de la machine virtuelle à évaluer. Un simple diff doit vous permettre de comparer les deux signatures. Si besoin, demandez à la personne évaluée où se trouve son fichier ".vdi".
Par précaution, vous pouvez dupliquer la machine virtuelle initiale afin d'en garder une copie.
Lancez la machine virtuelle à évaluer.
Si quelque chose ne fonctionne pas comme prévu ou que les deux signatures diffèrent, l'évaluation s'arrête ici.

		Partie obligatoire
Le projet consiste à créer et configurer une machine virtuelle en suivant des règles strictes. La personne évaluée va devoir vous aider durant la soutenance. Assurez-vous que tous les points suivants sont respectés.

Vue d'ensemble du projet
La personne évaluée doit vous expliquer simplement :
Le fonctionnement basique de sa machine virtuelle
Son choix de système d'exploitation
Les différences basiques entre Rocky et Debian
L'intérêt des machines virtuelles
Si le système d'exploitation choisi est Rocky, elle doit vous expliquer ce que sont SELinux et DNF.
Si le système d'exploitation choisi est Debian, elle doit vous expliquer la différence entre aptitude et apt, et ce qu'est APPArmor. Durant la soutenance, un script doit afficher des informations toutes les 10 minutes. Son fonctionnement sera vérifié en détails plus tard. Si les explications ne sont pas claires, l'évaluation s'arrête ici.

		Configuration simple
Rappel : dès que vous avez besoin d'aide pour vérifier un point, la
personne évaluée doit pouvoir vous aider.

Vérifiez que la machine ne possède pas d'environnement graphique au lancement. Un mot de passe sera demandé avant toute tentative de connection sur cette machine. Connectez-vous avec un utilisateur non root. Vérifiez que le mot de passe choisi respecte les règles imposées dans le sujet. Ensuite, avec l'aide de l'évaluateur, assurez-vous que :
Le système d'exploitation choisi est bien Debian ou Rocky
Le service UFW est bien lancé
Le service SSH est bien lancé. Si quelque chose ne fonctionne pas comme prévu ou n'est pas clairement expliqué, l'évaluation s'arrête ici.

		Utilisateur
Rappel : dès que vous avez besoin d'aide pour vérifier un point, la
personne évaluée doit pouvoir vous aider.

Le sujet demande qu'un utilisateur ayant comme nom le login de la
personne évaluée soit présent sur la machine virtuelle. Vérifiez qu'il
a bien été ajouté et qu'il appartient aux groupes "sudo" et "user42".

Assurez-vous les règles imposées dans le sujet concernant la politique
de mot de passe ont bien été mises en place en suivant les étapes
suivantes.
Premièrement, créez un nouvel utilisateur. Assignez-lui un mot de passe
de votre choix en respectant les règles du sujet.
La personne évaluée doit maintenant vous expliquer comment elle a pu
mettre en place les règles demandées dans le sujet sur sa machine
virtuelle.
Normalement, il devrait y avoir un ou deux fichiers modifiés.
S'il y a le moindre problème, l'évaluation s'arrête ici.

Maintenant que vous avez un nouvel utilisateur, demandez à la personne
évaluée de créer un groupe nommé "evaluating" devant vous et de
l'assigner à cet utilisateur.
Enfin, vérifiez que cet utilisateur appartient bien au groupe
"evaluating".

Pour finir, demandez à la personne évaluée de vous exposer l'intérêt
de cette politique de mot de passe, ainsi que les avantages et les
inconvénients de sa mise en place. Bien entendu, répondre que c'est
parce le sujet le demande ne compte pas.
Si quelque chose ne fonctionne pas comme prévu ou n'est pas clairement
expliqué, l'évaluation s'arrête ici.

Hostname et partitions.
Rappel : dès que vous avez besoin d'aide pour vérifier un point, la
personne évaluée doit pouvoir vous aider.

Vérifiez que le hostname de la machine est bien formatté ainsi : login42 (login de la personne évaluée).
Modifiez ce hostname en remplaçant le login par le vôtre, puis relancez la machine. Si au redémarrage, le hostname n'a pas été mis à jour, l'évaluation s'arrête ici.
Vous pouvez maintenant restaurer le hostname original de la machine.
Demandez à la personne évaluée comment afficher les partitions de sa machine virtuelle.
Comparez la sortie avec l'exemple donné dans le sujet. Attention : si la personne évaluée a fait les bonus, il faudra se référer à l'exemple de la partie bonus.
Cette partie est l'occasion de discuter des partitions ! La personne
évaluée doit vous donner une petite explication sur le fonctionnement
et l'intérêt de LVM.
Si quelque chose ne fonctionne pas comme prévu ou n'est pas clairement
expliqué, l'évaluation s'arrête ici.

SUDO
Rappel : dès que vous avez besoin d'aide pour vérifier un point, la
personne évaluée doit pouvoir vous aider.

Vérifiez que le programme "sudo" est bien installé sur la machine virtuelle.
La personne évaluée doit maintenant montrer assigner votre nouvel utilisateur au groupe "sudo".
Le sujet impose des règles strictes pour sudo. La personne évaluée doit, dans premier temps, expliquer l'intérêt et le fonctionnement de sudo par des exemples de son choix. Dans un second temps, elle doit vous démontrer la mise en place des règles imposées par le sujet.
Vérifiez que le dossier "/var/log/sudo/" existe et possède au moins un fichier. Vérifiez le contenu des fichiers de ce dossier, Vous devriez voir un historique des commandes utilisées avec sudo. Enfin, tentez de lancer une commande via sudo. Regardez si le(s) fichier(s) du dossier "/var/log/sudo/" ont été mis à jour. Si quelque chose ne fonctionne pas comme prévu ou n'est pas clairement expliqué, l'évaluation s'arrête ici.
UFW / Firewalld
Rappel : dès que vous avez besoin d'aide pour vérifier un point, la
personne évaluée doit pouvoir vous aider.

Vérifiez que le programme "UFW" (ou "Firewalld" pour rocky) est bien installé sur la machine virtuelle.
Vérifiez qu'il fonctionne correctement.
La personne évaluée doit vous expliquer basiquement ce qu'est UFW (ou "Firewalld") et l'intérêt de l'utiliser.
Listez les règles actives dans UFW (ou "Firewalld"). Une règle doit exister pour le port 4242.
Ajoutez une nouvelle règle pour ouvrir le port 8080. Vérifiez que celle-ci a bien été ajoutée en listant les règles actives.
Pour finir, supprimez cette nouvelle règle avec l'aide de la personne évaluée. Si quelque chose ne fonctionne pas comme prévu ou n'est pas clairement expliqué, l'évaluation s'arrête ici.
SSH
Rappel : dès que vous avez besoin d'aide pour vérifier un point, la
personne évaluée doit pouvoir vous aider.

Vérifiez que le service SSH est bien installé sur la machine virtuelle.
Vérifiez qu'il fonctionne correctement.
La personne évaluée doit vous expliquer basiquement ce qu'est SSH et l'intérêt de l'utiliser.
Vérifiez que le service SSH utilise uniquement le port 4242 dans la machine virtuelle.
La personne évaluée doit vous aider à utiliser SSH afin de vous connecter avec le nouvel utilisateur créé. Pour ce faire, vous pouvez utiliser une clef ou un simple mot de passe. Cela dépendra de la personne évaluée. Bien entendu, vous devez vous assurez que l'on ne peut pas utiliser SSH avec l'utilisateur "root" comme indiqué dans le sujet. Si quelque chose ne fonctionne pas comme prévu ou n'est pas clairement expliqué, l'évaluation s'arrête ici.
Script monitoring
Rappel : dès que vous avez besoin d'aide pour vérifier un point, la
personne évaluée doit pouvoir vous aider.

La personne évaluée doit vous expliquer simplement :

Le fonctionnement de son script en affichant le code de celui-ci
Ce qu'est "cron"
Comment elle a mis en place son script afin qu'il s'exécute toutes les 10 minutes dès le lancement du serveur. Une fois le bon fonctionnement du script vérifié, la personne évaluée doit faire en sorte que ce script s'exécute toute les minutes. Vous pouvez lancer ce que vous souhaitez afin de vous assurer que le script s'exécute correctement avec des valeurs dynamiques. Enfin, la personne évaluée doit faire en sorte que le script cesse de s'exécuter au lancement du serveur, sans toutefois modifier le script en lui-même. Pour vérifier ce point, il faudra redémarrer le serveur une dernière fois. Au démarrage, il faudra bien vérifier que le script existe toujours au même endroit, que ses droits sont restés inchangés, et qu'il n'a pas subi de modification. Si un des points ci-dessus n'est pas correct, l'évaluation s'arrête ici.
Bonus
Les bonus ne seront examinés que si la partie obligatoire est excellente. Cela signifie que la partie obligatoire doit avoir été réalisée du début à la fin, avec une gestion d'erreur parfaite même en cas d'usage inattendu. Si tous les points obligatoires n'ont pas été attribués pendant cette soutenance, aucun point bonus ne sera comptabilisé.

Bonus
Vérifiez avec l'aide du sujet et de la personne évaluée les bonus
disponibles pour ce projet :

La mise en place des partitions vaudra 2 points
La mise en place de WordPress, avec les services listés dans le sujet uniquement, vaudra 2 points
Le service dont le choix est laissé libre vaudra 1 point. Vérifiez et testez le bon fonctionnement et l'implémentation de chaque service supplémentaire. Pour le service bonus dont le choix est laissé libre, la personne évaluée doit vous fournir une explication simple du service et expliquer les raisons de son choix. Attention : NGINX et Apache2 sont interdits.


------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------

Pour installer Debian sans interface graphique en utilisant Virtual Machine Manager (VMM), voici un guide étape par étape :

		Pré-requis
Install Virtual Machine Manager (VMM) :
Assurez-vous que VMM est installé sur votre système hôte.
Installez également les dépendances nécessaires telles que libvirt et qemu.
Étapes d'Installation

	1. Télécharger l'ISO de Debian

Accédez au site officiel de Debian et téléchargez l'ISO de la version stable (netinst ou CD minimal).
	2. Créer une Nouvelle Machine Virtuelle

Lancer Virtual Machine Manager :

Ouvrez VMM à partir de votre menu OU via bash :		 virt-manager

			Créer une Nouvelle VM :
bouton Créer une nouvelle machine virtuelle.
Choisir l'ISO :

Sélectionnez Installer depuis un fichier ISO/image.
Parcourez et sélectionnez l'ISO de Debian que vous avez téléchargé et qui vous avex mit dans le goinfre ou le sgoinfre.

Configurer le Système :

Nom de la VM : Donnez un nom à votre VM.
Type de Système : Choisissez Debian.
Mémoire et CPU : Allouez 1024 et CPU 1.
Disque Dur Virtuel : select custom storage / browse local / sgoinfre /debian12-*.qcow2 :)
ready to begin installation : custome size before install / remove "NIC :2:f0:b2"
XML :
		<domain type="kvm"> BECOME = <domain xmlns:qemu='http://libvirt.org/schemas/domain/qemu/1.0' type="kvm">
		  </devices>  
		</domain> 
					BECOME =
		 </devices>
 		 <qemu:commandline>
   		   <qemu:arg value='-netdev'/>
    		   <qemu:arg value='user,id=mynet.0,net=10.0.10.0/24,hostfwd=tcp::22222-:4242'/>
   		   <qemu:arg value='-device'/>
  		   <qemu:arg value='rtl8139,netdev=mynet.0'/>
		</qemu:commandline>
		</domain>
	begin installation =)

Options Additionnelles :

Décochez l'option Installer l'interface graphique si disponible.
3. Configurer le Démarrage sur l'ISO

Assurez-vous que la VM est configurée pour démarrer à partir de l'ISO de Debian.
4. Lancer la VM et Commencer l'Installation

Démarrer la VM :

Cliquez sur Terminer pour démarrer la VM.
Installation de Debian :

Sélectionnez Install ou Graphical Install dans le menu de démarrage.
Choisissez la langue, le pays et la disposition du clavier.
Configurer le Réseau :

Configurez les paramètres réseau. Généralement, choisir DHCP automatique est suffisant.
Configurer le Nom d'Hôte et le Domaine :

Donnez un nom à votre machine, par exemple debian-server.
Créer un Compte Utilisateur et un Mot de Passe Root :

Configurez un mot de passe pour le compte root.
Créez un utilisateur standard avec un mot de passe.
Partitionnement du Disque :

Utilisez le partitionnement guidé pour plus de simplicité, sélectionnez Utiliser un disque entier.
Choisissez le disque virtuel que vous avez créé.
Sélection des Logiciels :

Lorsque vous arrivez à l'étape de sélection des logiciels, décochez l'option Debian desktop environment.
Assurez-vous que standard system utilities est coché.
Installer le Chargeur de Démarrage GRUB :

Installez GRUB sur le disque principal.
Finaliser l'Installation :

Une fois l'installation terminée, redémarrez la VM.
5. Post-Installation

Connexion à la VM :

Connectez-vous en utilisant les informations d'identification que vous avez configurées.
Mise à Jour du Système :

Mettez à jour le système avec les dernières mises à jour de sécurité :
bash
Copier le code
sudo apt update
sudo apt upgrade
Configurer le Pare-feu :

Installez et configurez ufw :
bash
Copier le code
sudo apt install ufw
sudo ufw enable
sudo ufw allow ssh
Configurer SSH :

Si ce n'est pas fait automatiquement, installez le serveur SSH :
bash
Copier le code
sudo apt install openssh-server
Configurer les Options de Sécurité :

Suivez les meilleures pratiques de sécurité, telles que la désactivation de l'accès root en SSH et la modification du port SSH.
En suivant ces étapes, vous pouvez installer Debian sans interface graphique sur une machine virtuelle en utilisant Virtual Machine Manager.
pour linstaller dans un dossier goinfre comment faire ?
GPT
Pour installer une machine virtuelle (VM) Debian sans interface graphique dans un dossier spécifique (que vous appelez "goinfre") en utilisant Virtual Machine Manager (VMM), vous pouvez suivre les étapes suivantes. L'idée est de configurer VMM pour stocker les disques virtuels et autres fichiers liés à la VM dans ce dossier.

Étapes d'Installation
1. Préparation de l'Environnement

Créer le dossier "goinfre" :

Créez le dossier où vous souhaitez stocker les fichiers de la VM. Par exemple :
bash
Copier le code
mkdir -p /path/to/goinfre
Assurez-vous que votre utilisateur dispose des droits nécessaires :

Modifiez les permissions pour que votre utilisateur (ou le service libvirt) puisse accéder à ce dossier :
bash
Copier le code
sudo chown -R $USER:$USER /path/to/goinfre
2. Télécharger l'ISO de Debian

Accédez au site officiel de Debian et téléchargez l'ISO de la version stable (netinst ou CD minimal).
3. Configurer Virtual Machine Manager

Lancer Virtual Machine Manager :

Ouvrez VMM à partir de votre menu ou via la ligne de commande :
bash
Copier le code
virt-manager
Configurer le Répertoire de Stockage dans VMM :

Ajouter un Nouveau Pool de Stockage :

Cliquez sur Edit > Connection Details > Storage > + (Ajouter un pool de stockage).
Donnez un nom au pool, par exemple goinfre.
Sélectionnez Filesystem Directory et cliquez sur Forward.
Entrez le chemin vers votre dossier goinfre, par exemple /path/to/goinfre.
Cliquez sur Finish pour créer le pool.
Activer et Démarrer le Pool :

Cliquez sur le pool goinfre que vous venez de créer.
Cliquez sur Start Pool pour l'activer.
Cliquez sur Autostart pour s'assurer qu'il démarre automatiquement à chaque démarrage de VMM.
4. Créer une Nouvelle Machine Virtuelle

Créer la VM :

Cliquez sur Create a new virtual machine.
Choisir l'ISO :

Sélectionnez Local install media (ISO image or CDROM).
Parcourez et sélectionnez l'ISO de Debian que vous avez téléchargé.
Configurer la VM :

Name : Donnez un nom à votre VM, par exemple "DebianServer".
Operating System : Sélectionnez Linux et Debian.
Memory and CPU : Allouez une quantité appropriée de mémoire RAM (1024 Mo ou plus) et de CPU (1 ou plus).
Storage : Quand vous arrivez à l'option de stockage, choisissez Select or create custom storage.
Cliquez sur Manage... et ensuite New Volume.
Dans Storage Volumes, sélectionnez le pool goinfre que vous avez créé.
Donnez un nom au volume (par exemple debian-server.qcow2) et définissez la taille (10 Go ou plus).
Cliquez sur Finish pour créer le volume.
Sélectionnez le volume nouvellement créé pour l'utiliser comme disque principal de la VM.
Configurer le Réseau :

Utilisez le mode réseau NAT ou Ponté selon vos besoins.
Finaliser la Création de la VM :

Décochez Customize configuration before install.
Cliquez sur Finish pour commencer l'installation de Debian.
5. Installation de Debian

Démarrer la VM :

La VM démarrera automatiquement avec l'ISO de Debian.
Suivre les Étapes de l'Installation :

Sélectionnez Install ou Graphical Install.
Suivez les instructions pour configurer la langue, le pays, et le clavier.
Configurez le réseau, le nom d'hôte, et le domaine.
Créez un compte utilisateur et définissez un mot de passe root.
Partitionnez le disque, en utilisant le disque virtuel que vous avez créé dans le dossier goinfre.
Décochez Debian desktop environment pour installer Debian sans interface graphique, mais assurez-vous de sélectionner standard system utilities.
Finaliser l'Installation :

Installez GRUB sur le disque principal.
Redémarrez la VM une fois l'installation terminée.
6. Post-Installation

Connexion à la VM :

Connectez-vous avec les informations d'identification que vous avez configurées.
Mise à Jour du Système :

Mettez à jour le système avec les dernières mises à jour de sécurité :
bash
Copier le code
sudo apt update
sudo apt upgrade
Configurer le Pare-feu :

Installez et configurez ufw :
bash
Copier le code
sudo apt install ufw
sudo ufw enable
sudo ufw allow ssh
Configurer SSH :

Si ce n'est pas fait automatiquement, installez le serveur SSH :
bash
Copier le code
sudo apt install openssh-server
En suivant ces étapes, vous aurez installé Debian sans interface graphique dans le dossier goinfre en utilisant Virtual Machine Manager.


Born 2 be root
Quelques liens de tutos si vous êtes en galères :
https://techdebt.tistory.com/18
https://jjjaeu.tistory.com/33
https://infinitt.tistory.com/39
https://tbonelee.tistory.com/16
https://github.com/pasqualerossi/Born2BeRoot-Guide?tab=readme-ov-file
https://www.youtube.com/results?search_query=born2beroot+coreen
shasum
-----------------------> Partie obligatoire
<-----------------------
### Configuration XML pour la création de la VM ###
Pendant l'installation de la VM :
- Partition disk : Guided - use entire disk and set up encrypted LVM
- Séparation des partitions /home, /var, et /tmp
# Mise à jour et installation de sudo
apt-get update -y
apt-get upgrade -y
apt install sudo
groupadd user42
usermod -aG user42, sudo cgorin
# Configuration de sudo
sudo visudo
-> Ajouter : cgorin
ALL=(ALL:ALL) ALL
sudo nano /etc/sudoers
Defaults
env_reset
Defaults
mail_badpass
Defaults
secure_path="/usr/local/sbin:/usr/local/bin:/usr/bin:/sbin:/bin"
Defaults
badpass_message="Password is wrong, please try again!"
Defaults
passwd_tries=3
Defaults
logfile="/var/log/sudo/sudo.log"
Defaults
log_input, log_output
Defaults
requiretty
### Configuration de SSH et UFW ###
# Configuration du service SSH
apt install openssh-servernano /etc/ssh/sshd_config
-> Remplacer #Port 22 par Port 4242
systemctl restart ssh
systemctl status ssh
# Configuration du pare-feu UFW
apt-get install ufw
ufw enable
ufw default deny
ufw allow 4242/tcp
ufw status verbose
### Configuration de sudo selon une pratique stricte ###
# Installation de libpam-pwquality
sudo apt install libpam-pwquality
# Configuration de /etc/pam.d/common-password
sudo visudo /etc/pam.d/common-password
-> Remplacer Password requisite pam_pwquality.so retry=3 par:
Password requisite pam_pwquality.so retry=3 minlen=10 maxrepeat=3
difok=7 lcredit=-1 ucredit=-1 dcredit=-1 reject_username
enforce_for_root
# Application de la politique de mot de passe
passwd -e cgorin
# Configuration de /etc/login.defs
sudo nano /etc/login.defs
Ajouter :
PASS_MAX_DAYS 30
PASS_MIN_DAYS 2
PASS_WARN_AGE 7
# Création du dossier pour les logs sudo
sudo mkdir /var/log/sudo/
### Mise en place d’un script monitoring ###
# Installation de net-tools :
sudo apt-get install net-tools
touch /usr/local/bin/monitoring.sh
chmod 777 /usr/local/bin/monitoring.sh
# Modification du script
Dans le terminal du pc hote -> ssh cgorin@127.0.0.1 -p 22222
sudo nano /usr/local/bin/monitoring.sh
#!/bin/basharc=$(uname -a)
pcpu=$(grep "physical id" /proc/cpuinfo | sort | uniq | wc -l)
vcpu=$(grep "^processor" /proc/cpuinfo | wc -l)
fram=$(free -m | awk '$1 == "Mem:" {print $2}')
uram=$(free -m | awk '$1 == "Mem:" {print $3}')
pram=$(free | awk '$1 == "Mem:" {printf("%.2f"), $3/$2*100}')
fdisk=$(df -BG | grep '^/dev/' | grep -v '/boot$' | awk '{ft +=
$2} END {print ft}')
udisk=$(df -BM | grep '^/dev/' | grep -v '/boot$' | awk '{ut +=
$3} END {print ut}')
pdisk=$(df -BM | grep '^/dev/' | grep -v '/boot$' | awk '{ut +=
$3} {ft+= $2} END {printf("%d"), ut/ft*100}')
cpul=$(top -bn1 | grep '^%Cpu' | cut -c 9- | xargs | awk
'{printf("%.1f%%"), $1 + $3}')
lb=$(who -b | awk '$1 == "system" {print $3 " " $4}')
lvmu=$(if [ $(lsblk | grep "lvm" | wc -l) -eq 0 ]; then echo no;
else echo yes; fi)
ctcp=$(ss -neopt state established | wc -l)
ulog=$(users | wc -w)
ip=$(hostname -I)
mac=$(ip link show | grep "ether" | awk '{print $2}')
cmds=$(journalctl _COMM=sudo | grep COMMAND | wc -l)
wall "
#Architecture: $arc
#CPU physical: $pcpu
#vCPU: $vcpu
#Memory Usage: $uram/${fram}MB ($pram%)
#Disk Usage: $udisk/${fdisk}Gb ($pdisk%)
#CPU load: $cpul
#Last boot: $lb
#LVM use: $lvmu
#Connections TCP: $ctcp ESTABLISHED
#User log: $ulog
#Network: IP $ip ($mac)
#Sudo: $cmds cmd"
OU
#!/bin/bash
arch=$(uname -a);
socket=$(lscpu | grep -E '^Socket\(' | rev | cut -d' ' -f1 |
rev);
vcpu=$(lscpu | grep -E '^CPU\(' | rev | cut -d' ' -f1 | rev);
mem_used=$(free -m | head -n 2 | tail -1 | awk '{print $3}');
mem_total=$(free -m | head -n 2 | tail -1 | awk '{print $2}');
mem_used_percent=$(($mem_used*100/$mem_total));
sda_size=$((($(df /boot | awk 'NR > 1 {print $2}') + $(df / | awk
'NR > 1 {print $2}') + $(df /srv | awk 'NR > 1 {print $2}') +
$(df /home | awk 'NR > 1 {print $2}') + $(df /tmp | awk 'NR > 1
{print $2}') + $(df /var | awk 'NR > 1 {print $2}') + $(df/var/log | awk 'NR > 1 {print $2}')) / 1024 + $(free -m | head -n
3 | tail -1 | awk '{print $2}')));
sda_used=$((($(df /boot | awk 'NR > 1 {print $3}') + $(df / | awk
'NR > 1 {print $3}') + $(df /srv | awk 'NR > 1 {print $3}') +
$(df /home | awk 'NR > 1 {print $3}') + $(df /tmp | awk 'NR > 1
{print $3}') + $(df /var | awk 'NR > 1 {print $3}') + $(df
/var/log | awk 'NR > 1 {print $3}')) / 1024 + $(free -m | head -n
3 | tail -1 | awk '{print $3}')));
sda_used_percent=$(($sda_used*100/$sda_size));
cpu_loaded_user=$(top -bn1 | grep '%Cpu(s)' | awk '{print $2}' |
sed 's:\.[^|]*::g');
cpu_loaded_sys=$(top -bn1 | grep '%Cpu(s)' | awk '{print $4}' |
sed 's:\.[^|]*::g');
cpu_loaded=$((cpu_loaded_user+cpu_loaded_sys));
last_boot=$(who -b | cut -d ' ' -f13-15);
raw_lvm=$(lsblk -f | grep "sda2_crypt" | awk '{print $3}');
is_lvm="no";
if [ $raw_lvm = "LVM2" ]
then
is_lvm="yes";
fi
esta_connections=$(ss -s | grep "estab" | awk '{print $4}' | rev
| cut -c2- | rev);
user_log=$(who | cut -d' ' -f1 | sort | uniq | wc | awk '{print
$1}');
ipv4=$(sudo ifconfig enp0s3 | grep "inet " | awk '{print $2}');
mac_address=$(sudo ifconfig enp0s3 | grep "ether " | awk '{print
$2}');
raw_cmd=$(cat /var/log/sudo/sudo.log | wc | awk '{print $1}');
sudo_cmd=$(($raw_cmd / 2));
clear;
echo
"----------------------------------------------------------------
---------------
# Architecture: $arch
-----------------------------------------------------------------
--------------
# CPU physical: $socket
# vCPU: $vcpu
# CPU load: $cpu_loaded%
# Memory Usage: $mem_used MB / $mem_total MB ($mem_used_percent%)
# Disk Usage: $sda_used MB / $sda_size MB ($sda_used_percent%)
-----------------------------------------------------------------
--------------# Last boot: $last_boot
# LVM use: $is_lvm
-----------------------------------------------------------------
--------------
# Connection(s) TCP: $esta_connections
# User(s) log: $user_log
# Network: IP $ipv4 ($mac_address)
-----------------------------------------------------------------
--------------
# Sudo history: $sudo_cmd
-----------------------------------------------------------------
--------------"| wall -n;
sudo visudo
ALL=(ALL) NOPASSWD: /usr/local/bin/monitoring.sh
sudo reboot
sudo /usr/local/bin/monitoring.sh
sudo crontab -u root -e
*/10 * * * * /usr/local/bin/monitoring.sh
--------------------> Partie bonus (WordPress)
<--------------------
### Installation de PHP ###
# Ajout du dépôt Sury's repository pour obtenir la dernière version de
PHP
sudo apt update
sudo apt install curl
sudo curl -sSL https://packages.sury.org/php/README.txt | sudo bash -x
sudo apt update
# Installation de PHP version 8.1
sudo apt install php8.1
sudo apt install php-common php-cgi php-cli php-mysql
### Installation de Lighttpd ###
service lighttpd force-reload
# Vérification si Apache est installé et désinstallation pour éviter
les conflits avec Lighttpd
systemctl status apache2
sudo apt purge apache2# Installation de Lighttpd
sudo apt install lighttpd
# Vérification de la version, démarrage, activation et statut de
Lighttpd
sudo lighttpd -v
sudo systemctl start lighttpd
sudo systemctl enable lighttpd
sudo systemctl status lighttpd
# Autorisation du port HTTP (port 80) à travers UFW
sudo ufw allow http
sudo ufw status
# Activation des modules FastCGI et FastCGI-PHP de Lighttpd
sudo lighty-enable-mod fastcgi
sudo lighty-enable-mod fastcgi-php
sudo service lighttpd force-reload
Pour tester si PHP fonctionne avec Lighttpd :
vi /var/www/html/info.php
<?php
echo “Hello World”;
?>
Ouvrir avec un navigateur web l'adresse
http://localhost:8080/index.php, le message Hello World! devrait
s'afficher.
### Installation de MariaDB ###
sudo apt install mariadb-server
# Démarrage, activation et vérification du statut de MariaDB
sudo systemctl start mariadb
sudo systemctl enable mariadb
systemctl status mariadb
# Configuration sécurisée de MySQL
sudo mysql_secure_installation
# Redémarrage du service MariaDB
sudo systemctl restart mariadb
# Connexion à MariaDB
mysql -u root -p
# Création d'une base de données pour WordPress
MariaDB [(none)]> CREATE DATABASE wordpress_db;
MariaDB [(none)]> CREATE USER 'admin'@'localhost' IDENTIFIED BY
'WPpassw0rd';MariaDB [(none)]> GRANT ALL ON wordpress_db.* TO 'admin'@'localhost'
IDENTIFIED BY 'WPpassw0rd' WITH GRANT OPTION;
MariaDB [(none)]> FLUSH PRIVILEGES;
MariaDB [(none)]> EXIT;
# Vérification que la base de données a été créée avec succès
mysql -u root -p
MariaDB [(none)]> show databases;
### Installation de WordPress ###
# Installation de wget et tar
sudo apt install wget
sudo apt install tar
# Téléchargement de la dernière version de Wordpress, extraction et
placement des contenus dans le répertoire /var/www/html/
wget http://wordpress.org/latest.tar.gz
tar -xzvf latest.tar.gz
sudo mv wordpress/* /var/www/html/
rm -rf latest.tar.gz wordpress/
# Création du fichier de configuration de WordPress
sudo mv /var/www/html/wp-config-sample.php /var/www/html/wp-config.php
# Édition de /var/www/html/wp-config.php avec les informations de la
base de données
/** The name of the database for WordPress */
define( 'DB_NAME', 'wordpress_db' );
/** Database username */
define( 'DB_USER', 'admin' );
/** Database password */
define( 'DB_PASSWORD', 'WPpassw0rd' );
/** Database host */
define( 'DB_HOST', 'localhost' );
# Modification des permissions du répertoire WordPress pour accorder
des droits au serveur web et redémarrage de Lighttpd
sudo chown -R www-data:www-data /var/www/html/
sudo chmod -R 755 /var/www/html/
sudo systemctl restart lighttpd
Dans le navigateur de l'hôte, connectez-vous à http://127.0.0.1:8080 et
terminez l'installation de WordPress.


